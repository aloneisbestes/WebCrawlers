# python爬虫介绍
## 一、什么是爬虫
1. 通过编写程序，模拟浏览器上网，然后让其去互联网上抓取数据的过程。<\br>
## 二、爬虫的价值
1. 实际应用。<\br>
2. 就业。<\br>
## 三、爬虫是否合法？
1. 在法律中是不被禁止的。<\br>
2. 具有违法风险。<\br>
3. 善意爬虫、恶意爬虫。<\br>
## 四、爬虫带来的风险
1. 爬虫干扰被访问网站的正常运营。<\br>
2. 爬虫抓取收到法律保护的特定类型的数据或信息。<\br>
如果爬虫涉及到以上两个方面，就有可能承担相应的法律责任。<\br>
## 五、如何正确的使用爬虫
1. 时常优化自己的程序，避免干扰被访问网站的正常运行。<\br>
2. 在使用或传播爬取到的数据时，需要审查爬取的内容，如果发现涉及到用户隐私或涉及到商业机密等敏感内容，及时停止爬取和传播。<\br>
## 六、爬虫使用场景
1. 通用爬虫: <\br>
    (1) 抓取系统重要组成部分。<\br>
    (2) 抓取的是一整张页面数据。<\br>
2. 聚焦爬虫:<\br>
    (1) 是建立在通用爬虫的基础之上。<\br>
    (2) 抓取的是页面中特定或指定的局部内容。<\br>
3. 增量式爬虫:<\br>
    (1) 检测网站中数据更新的情况。<\br>
    (2) 只会抓取网站中最新更新出来的数据。<\br>
## 七、爬虫的矛与盾
1. 反爬机制<\br>
    相关网站可以通过制定相关的策略或者技术手段，防止爬虫程序进行网站的爬取。<\br>
2. 反反爬策略<\br>
    爬虫程序可以通过制定相关的策略或者技术手段，破解相关网站中具备的反爬机制，从而可以获取相关网站中相关的数据。<\br>
## 八、rebots.txt 协议
1. 君子协议。<\br>
2. 规定网站中哪些数据可以被爬取，哪些数据不能被爬取。<\br>
## 九、http协议
概念: 服务器与客户端进行数据交互的一种形式。
1. 常用请求头信息<\br>
    (1) User-Agent: 请求载体的身份标识。<\br>
    (2) Connection: 请求完毕后是断开连接还是保持连接。<\br>
2. 常用响应头信息<\br>
    (1) Content-Type: 服务器响应给客户端的数据类型。<\br>
## 十、https协议
s: security，安全的意思。<\br>
安全的超文本传输协议。<\br>
1. 加密方式<\br>
    (1) 对称秘钥加密<\br>
    (2) 非对称秘钥加密<\br>
    (3) 证书秘钥加密<\br>
